正则表达式
1.定义：
    正则表达式一种文本模式的描述方式
2.模块：
    在Python中，正则表达式有关的模块是re
    import re
3.正则表达式的例子：
    \d\d\d-\d\d\d-\d\d\d\d
    \d{3}-\d{3}-\d{4}
4.Python中的正则表达式实现：
    1.引进re模组
    2.Regex对象：
        通过re.compile(正则表达式的字符串)返回对应的regex对象
        Regex对象具有两个重要的方法：search()和findall()
        注意：最好使用原始字符串，避免歧义
    3.1.search()方法 -> Match对象：
        通过Regex.search(str)返回一个Match对象
        若在str中找到了与正则表达式匹配的部分，则返回一个Match对象
        Match对象中包含span(开始位置，结束位置)和match(匹配的内容)
        若在str中未找到与正则表达式匹配的部分，则返回None
    3.2.findall()方法 -> 列表：
        通过Regex.findall()返回一个列表
        若在str中找到了与正则表达式匹配的部分，并将其中的匹配的字符串进入列表中
        若在str中未找到与正则表达式匹配的部分，则返回[]
    4.利用Match对象的group或者groups函数返回对应的字符串部分
      或者通过findall返回的列表使用对应的字符串部分
5.Python正则表达式中常见的一些符号及其意义：
    \d digit 数字字符
    \w word 字母、数字、下划线等等组成单词的字符
    \s space 制表符 换行符等isspace的内容
    \D \W \S 表示与小写取反
    . dot 表示除了换行符之外的所有字符
    ^ 表示从头匹配
    $ 表示从结尾匹配
    ()表示分组
    {}表示重复的次数
    ? 表示0次或1次
    ? 还可以表示非贪心模式 如\d{3,5}?,\d*?等
    * 表示0次或多次
    + 表示1次或多次
    []表示选取内容的范围为括号内的字符
    [^]表示和括号内的范围取补集
    注意： []中特殊字符不用使用\表示
6. Python正则表达式的一些函数和参数
    re.I 或 re.IGNORECASE 表示不区分大小写匹配
    re.DOTALL 表示.包含全部的符号，即包含换行符
    re.VERBOSE 用于应对复杂的正则表达式，可以自动忽略字符串中的space和注释
    以上都是compile方法的第二个参数
    regex.sub()方法: 该方法有两个参数：1.替换的字符串， 2.待替换的字符串
    该方法会将所有符合正则表达式的部分进行替换

    
